[2025-08-19T17:20:24.091099+00:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client:^5" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/http-client/HttpClient.php","line":65,"trace":[{"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/var/cache/dev/ContainerX8iOL7n/App_KernelDevDebugContainer.php","line":1470,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2025-08-19T17:20:24.108058+00:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" [] []
[2025-08-19T17:20:24.269868+00:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" 0.16003012657166 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0","total_time":0.16003012657165527} []
[2025-08-19T17:20:24.271046+00:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2025-08-19T17:20:24.271197+00:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" [] []
[2025-08-19T17:20:24.351310+00:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" 0.079962968826294 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm","total_time":0.07996296882629395} []
[2025-08-19T17:20:24.430036+00:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" 0.075287103652954 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints","total_time":0.0752871036529541} []
[2025-08-19T17:20:24.431489+00:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2025-08-19T17:20:24.869201+00:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" 0.43753099441528 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm","total_time":0.4375309944152832} []
[2025-08-19T17:20:25.008205+00:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client:^5" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/http-client/HttpClient.php","line":65,"trace":[{"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/var/cache/dev/ContainerX8iOL7n/App_KernelDevDebugContainer.php","line":1470,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2025-08-19T17:20:25.174304+00:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client:^5" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/http-client/HttpClient.php","line":65,"trace":[{"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/var/cache/dev/ContainerX8iOL7n/App_KernelDevDebugContainer.php","line":1470,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2025-08-19T17:20:25.185166+00:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" [] []
[2025-08-19T17:20:25.300179+00:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" 0.1136040687561 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0","total_time":0.11360406875610352} []
[2025-08-19T17:20:25.301155+00:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2025-08-19T17:20:25.301308+00:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" [] []
[2025-08-19T17:20:25.374375+00:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" 0.072962045669556 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm","total_time":0.07296204566955566} []
[2025-08-19T17:20:25.449975+00:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" 0.067550182342529 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints","total_time":0.0675501823425293} []
[2025-08-19T17:20:25.452546+00:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2025-08-19T17:20:25.525416+00:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" 0.072706937789917 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm","total_time":0.07270693778991699} []
[2025-08-19T17:20:28.477317+00:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client:^5" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/http-client/HttpClient.php","line":65,"trace":[{"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/var/cache/dev/ContainerX8iOL7n/App_KernelDevDebugContainer.php","line":1470,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2025-08-19T17:32:22.981567+00:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client:^5" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/http-client/HttpClient.php","line":65,"trace":[{"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/var/cache/dev/ContainerOOxheRT/App_KernelDevDebugContainer.php","line":1470,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2025-08-19T17:46:41.627381+00:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client:^5" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/http-client/HttpClient.php","line":65,"trace":[{"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/var/cache/dev/ContainerOOxheRT/App_KernelDevDebugContainer.php","line":1470,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2025-08-27T15:01:36.160178+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"16","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"16","charset":"utf8","dbname":"postgres"}} []
[2025-08-27T15:01:36.195722+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "vehimant_db" {"sql":"CREATE DATABASE \"vehimant_db\""} []
[2025-08-27T15:01:36.210134+00:00] doctrine.INFO: Disconnecting [] []
[2025-08-27T15:01:36.211455+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2025-08-27T15:06:04.599008+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-27T15:06:04.622084+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T15:06:04.632881+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-27T15:06:04.672652+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T15:06:04.673619+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-27T15:06:04.679098+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-08-27T15:06:04.681402+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T15:06:04.681929+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'vehimant_db'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'vehimant_db'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-08-27T15:06:04.686976+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T15:06:04.687771+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-08-27T15:06:04.704306+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-08-27T15:06:04.708956+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-08-27T15:06:04.713060+00:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-08-27T15:06:04.716219+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-27T15:06:04.736074+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-27T15:06:04.758472+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-08-27T15:06:04.759387+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-08-27T15:06:04.767046+00:00] doctrine.INFO: Disconnecting [] []
[2025-08-27T15:06:04.767159+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-27T15:06:04.767487+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-27T15:07:42.020950+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-27T15:07:42.062350+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T15:07:42.078394+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T15:07:42.080487+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-27T15:07:42.096329+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-08-27T15:07:42.113423+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-08-27T15:07:42.142810+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-27T15:07:42.144930+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-27T15:07:42.145557+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-27T15:07:42.159031+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-08-27T15:07:42.161765+00:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/error-handler/DebugClassLoader.php:347)"} []
[2025-08-27T15:07:42.162482+00:00] doctrine.DEBUG: Executing query: CREATE TABLE vehicle (id UUID NOT NULL, name VARCHAR(120) NOT NULL, plate VARCHAR(60) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, odometer_km INT NOT NULL, last_maintenance_type VARCHAR(255) NOT NULL, last_maintenance_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, owner_id UUID NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE vehicle (id UUID NOT NULL, name VARCHAR(120) NOT NULL, plate VARCHAR(60) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, odometer_km INT NOT NULL, last_maintenance_type VARCHAR(255) NOT NULL, last_maintenance_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, owner_id UUID NOT NULL, PRIMARY KEY(id))"} []
[2025-08-27T15:07:42.167675+00:00] doctrine.DEBUG: Executing query: CREATE UNIQUE INDEX UNIQ_1B80E486719ED75B ON vehicle (plate) {"sql":"CREATE UNIQUE INDEX UNIQ_1B80E486719ED75B ON vehicle (plate)"} []
[2025-08-27T15:07:42.173753+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN vehicle.id IS '(DC2Type:ulid)' {"sql":"COMMENT ON COLUMN vehicle.id IS '(DC2Type:ulid)'"} []
[2025-08-27T15:07:42.177507+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN vehicle.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN vehicle.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T15:07:42.178142+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN vehicle.last_maintenance_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN vehicle.last_maintenance_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T15:07:42.178684+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN vehicle.owner_id IS '(DC2Type:ulid)' {"sql":"COMMENT ON COLUMN vehicle.owner_id IS '(DC2Type:ulid)'"} []
[2025-08-27T15:07:42.179152+00:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-08-27T15:07:42.194029+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-08-27T15:07:42.197579+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-08-27T15:07:42.200978+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-08-27T15:07:42.203920+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T15:07:42.204324+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T15:07:42.204785+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T15:07:42.205262+00:00] doctrine.DEBUG: Executing query: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$             BEGIN                 PERFORM pg_notify('messenger_messages', NEW.queue_name::text);                 RETURN NEW;             END;         $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n            BEGIN\n                PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n                RETURN NEW;\n            END;\n        $$ LANGUAGE plpgsql;"} []
[2025-08-27T15:07:42.217203+00:00] doctrine.DEBUG: Executing query: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-08-27T15:07:42.218833+00:00] doctrine.DEBUG: Executing query: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-08-27T15:07:42.221573+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250827150604","2":"2025-08-27 15:07:42","3":61}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250827150604","2":"2025-08-27 15:07:42","3":61},"types":{"1":2,"2":2,"3":1}} []
[2025-08-27T15:07:42.223495+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-08-27T15:07:42.233049+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-27T15:07:42.233810+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-27T15:07:42.234313+00:00] doctrine.INFO: Disconnecting [] []
[2025-08-27T16:38:56.395113+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-27T16:38:56.401349+00:00] console.CRITICAL: Error thrown while running command "doctrine:schema:validate". Message: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "127.0.0.1", port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections?" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)","command":"doctrine:schema:validate","message":"An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?"} []
[2025-08-27T16:38:56.401944+00:00] console.DEBUG: Command "doctrine:schema:validate" exited with code "7" {"command":"doctrine:schema:validate","code":7} []
[2025-08-27T16:42:48.771096+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-27T16:42:48.789821+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:status". Message: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "127.0.0.1", port 5433 failed: FATAL:  password authentication failed for user "vehimant"" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\" at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\" at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\" at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)","command":"doctrine:migrations:status","message":"An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\""} []
[2025-08-27T16:42:48.790053+00:00] console.DEBUG: Command "doctrine:migrations:status" exited with code "7" {"command":"doctrine:migrations:status","code":7} []
[2025-08-27T16:42:54.782463+00:00] deprecation.INFO: User Deprecated: Since doctrine/doctrine-bundle 2.2: The "Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand" (doctrine:query:sql) is deprecated, use dbal:run-sql command instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since doctrine/doctrine-bundle 2.2: The \"Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\RunSqlDoctrineCommand\" (doctrine:query:sql) is deprecated, use dbal:run-sql command instead. at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/doctrine-bundle/src/Command/Proxy/RunSqlDoctrineCommand.php:34)"} []
[2025-08-27T16:42:54.787743+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-27T16:42:54.797255+00:00] console.CRITICAL: Error thrown while running command "doctrine:query:sql 'SELECT 1'". Message: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "127.0.0.1", port 5433 failed: FATAL:  password authentication failed for user "vehimant"" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\" at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\" at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\" at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)","command":"doctrine:query:sql 'SELECT 1'","message":"An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\""} []
[2025-08-27T16:42:54.797475+00:00] console.DEBUG: Command "doctrine:query:sql 'SELECT 1'" exited with code "7" {"command":"doctrine:query:sql 'SELECT 1'","code":7} []
[2025-08-27T16:48:34.829355+00:00] deprecation.INFO: User Deprecated: Since doctrine/doctrine-bundle 2.2: The "Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand" (doctrine:query:sql) is deprecated, use dbal:run-sql command instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since doctrine/doctrine-bundle 2.2: The \"Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\RunSqlDoctrineCommand\" (doctrine:query:sql) is deprecated, use dbal:run-sql command instead. at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/doctrine-bundle/src/Command/Proxy/RunSqlDoctrineCommand.php:34)"} []
[2025-08-27T16:48:34.834113+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-27T16:48:34.845770+00:00] console.CRITICAL: Error thrown while running command "doctrine:query:sql 'SELECT 1'". Message: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "127.0.0.1", port 5433 failed: FATAL:  password authentication failed for user "vehimant"" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\" at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\" at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\" at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)","command":"doctrine:query:sql 'SELECT 1'","message":"An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5433 failed: FATAL:  password authentication failed for user \"vehimant\""} []
[2025-08-27T16:48:34.845974+00:00] console.DEBUG: Command "doctrine:query:sql 'SELECT 1'" exited with code "7" {"command":"doctrine:query:sql 'SELECT 1'","code":7} []
[2025-08-27T16:49:50.200639+00:00] deprecation.INFO: User Deprecated: Since doctrine/doctrine-bundle 2.2: The "Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand" (doctrine:query:sql) is deprecated, use dbal:run-sql command instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since doctrine/doctrine-bundle 2.2: The \"Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\RunSqlDoctrineCommand\" (doctrine:query:sql) is deprecated, use dbal:run-sql command instead. at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/doctrine-bundle/src/Command/Proxy/RunSqlDoctrineCommand.php:34)"} []
[2025-08-27T16:49:50.205845+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-27T16:49:50.223695+00:00] doctrine.DEBUG: Executing query: SELECT 1 {"sql":"SELECT 1"} []
[2025-08-27T16:49:50.235210+00:00] doctrine.INFO: Disconnecting [] []
[2025-08-27T16:51:49.273457+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-27T16:51:49.283734+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T16:51:49.286160+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T16:51:49.289818+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-27T16:51:49.299417+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-08-27T16:51:49.307268+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-08-27T16:51:49.318582+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-27T16:51:49.320721+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-27T16:51:49.321658+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-27T16:51:49.330030+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-08-27T16:51:49.332924+00:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/error-handler/DebugClassLoader.php:347)"} []
[2025-08-27T16:51:49.333677+00:00] doctrine.DEBUG: Executing query: CREATE TABLE vehicle (id UUID NOT NULL, name VARCHAR(120) NOT NULL, plate VARCHAR(60) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, odometer_km INT NOT NULL, last_maintenance_type VARCHAR(255) NOT NULL, last_maintenance_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, owner_id UUID NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE vehicle (id UUID NOT NULL, name VARCHAR(120) NOT NULL, plate VARCHAR(60) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, odometer_km INT NOT NULL, last_maintenance_type VARCHAR(255) NOT NULL, last_maintenance_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, owner_id UUID NOT NULL, PRIMARY KEY(id))"} []
[2025-08-27T16:51:49.338591+00:00] doctrine.DEBUG: Executing query: CREATE UNIQUE INDEX UNIQ_1B80E486719ED75B ON vehicle (plate) {"sql":"CREATE UNIQUE INDEX UNIQ_1B80E486719ED75B ON vehicle (plate)"} []
[2025-08-27T16:51:49.342996+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN vehicle.id IS '(DC2Type:ulid)' {"sql":"COMMENT ON COLUMN vehicle.id IS '(DC2Type:ulid)'"} []
[2025-08-27T16:51:49.344715+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN vehicle.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN vehicle.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T16:51:49.345358+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN vehicle.last_maintenance_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN vehicle.last_maintenance_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T16:51:49.345718+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN vehicle.owner_id IS '(DC2Type:ulid)' {"sql":"COMMENT ON COLUMN vehicle.owner_id IS '(DC2Type:ulid)'"} []
[2025-08-27T16:51:49.345993+00:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-08-27T16:51:49.353553+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-08-27T16:51:49.358344+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-08-27T16:51:49.361288+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-08-27T16:51:49.363976+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T16:51:49.364653+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T16:51:49.364968+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-08-27T16:51:49.365251+00:00] doctrine.DEBUG: Executing query: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$             BEGIN                 PERFORM pg_notify('messenger_messages', NEW.queue_name::text);                 RETURN NEW;             END;         $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n            BEGIN\n                PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n                RETURN NEW;\n            END;\n        $$ LANGUAGE plpgsql;"} []
[2025-08-27T16:51:49.366543+00:00] doctrine.DEBUG: Executing query: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-08-27T16:51:49.367109+00:00] doctrine.DEBUG: Executing query: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-08-27T16:51:49.368904+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250827150604","2":"2025-08-27 16:51:49","3":37}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250827150604","2":"2025-08-27 16:51:49","3":37},"types":{"1":2,"2":2,"3":1}} []
[2025-08-27T16:51:49.370894+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-08-27T16:51:49.376045+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-27T16:51:49.376791+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-27T16:51:49.377098+00:00] doctrine.INFO: Disconnecting [] []
[2025-08-27T16:52:25.423629+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-27T16:52:25.440587+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-27T16:52:25.450582+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-08-27T16:52:25.452519+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T16:52:25.453741+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'vehimant_db'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'vehimant_db'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-08-27T16:52:25.457169+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-27T16:52:25.458083+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-08-27T16:52:25.463236+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-08-27T16:52:25.464020+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-27T16:52:25.464455+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-08-27T16:52:25.466144+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-08-27T16:52:25.467284+00:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-08-27T16:52:25.469040+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-08-27T16:52:25.470508+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-08-27T16:52:25.471252+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-08-27T16:52:25.472075+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-27T16:52:25.472713+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16395   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16395\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-08-27T16:52:25.473184+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16395   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16395\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-27T16:52:25.473746+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-27T16:52:25.478097+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-27T16:52:25.478672+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-27T16:52:25.479007+00:00] doctrine.INFO: Disconnecting [] []
[2025-08-28T12:50:09.024911+00:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client:^5" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/http-client/HttpClient.php","line":65,"trace":[{"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/var/cache/dev/ContainerENVIpOh/App_KernelDevDebugContainer.php","line":1489,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2025-08-28T13:04:42.251091+00:00] console.CRITICAL: Error thrown while running command "'lexik:jwt:check-passphrase'". Message: "Command "lexik:jwt:check-passphrase" is not defined.  Did you mean one of these?     lexik:jwt:check-config     lexik:jwt:enable-encryption     lexik:jwt:generate-keypair     lexik:jwt:generate-token     lexik:jwt:migrate-config" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"lexik:jwt:check-passphrase\" is not defined.\n\nDid you mean one of these?\n    lexik:jwt:check-config\n    lexik:jwt:enable-encryption\n    lexik:jwt:generate-keypair\n    lexik:jwt:generate-token\n    lexik:jwt:migrate-config at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/console/Application.php:725)","command":"'lexik:jwt:check-passphrase'","message":"Command \"lexik:jwt:check-passphrase\" is not defined.\n\nDid you mean one of these?\n    lexik:jwt:check-config\n    lexik:jwt:enable-encryption\n    lexik:jwt:generate-keypair\n    lexik:jwt:generate-token\n    lexik:jwt:migrate-config"} []
[2025-08-28T13:05:42.871162+00:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client:^5" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/http-client/HttpClient.php","line":65,"trace":[{"file":"/home/tonidebian/projects/VehiMant/projectVehiMant/var/cache/dev/ContainerDR3Cx9A/App_KernelDevDebugContainer.php","line":1465,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2025-08-28T16:43:23.627581+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-28T16:43:23.660506+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.666478+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-28T16:43:23.684095+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-08-28T16:43:23.685651+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-28T16:43:23.686292+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.686740+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-28T16:43:23.695189+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.695780+00:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-08-28T16:43:23.698818+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.699487+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-08-28T16:43:23.706056+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-08-28T16:43:23.715032+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.715558+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-08-28T16:43:23.717671+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16389   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16389\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:43:23.719148+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-28T16:43:23.726647+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.727528+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-28T16:43:23.728620+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.728911+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-28T16:43:23.729894+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.730180+00:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-08-28T16:43:23.730974+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.731261+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-08-28T16:43:23.732152+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-08-28T16:43:23.733543+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.734116+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-08-28T16:43:23.735177+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16389   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16389\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:43:23.735784+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-28T16:43:23.740770+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-08-28T16:43:23.741577+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.741983+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'vehimant_db'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'vehimant_db'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-08-28T16:43:23.744547+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:43:23.744942+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-08-28T16:43:23.752162+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-08-28T16:43:23.753140+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-28T16:43:23.753693+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-08-28T16:43:23.756512+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-08-28T16:43:23.758044+00:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-08-28T16:43:23.759197+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-08-28T16:43:23.759692+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-08-28T16:43:23.760173+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-08-28T16:43:23.760625+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:43:23.761155+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16395   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16395\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-08-28T16:43:23.761613+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16395   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16395\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:43:23.762092+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16389   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16389\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:43:23.763955+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-28T16:43:23.780516+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-28T16:43:23.781732+00:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "The class 'App\Domain\User\Entity\User' was not found in the chain configured namespaces App\Domain\Vehicle\Entity" {"exception":"[object] (Doctrine\\Persistence\\Mapping\\MappingException(code: 0): The class 'App\\Domain\\User\\Entity\\User' was not found in the chain configured namespaces App\\Domain\\Vehicle\\Entity at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/persistence/src/Persistence/Mapping/MappingException.php:22)","command":"make:migration","message":"The class 'App\\Domain\\User\\Entity\\User' was not found in the chain configured namespaces App\\Domain\\Vehicle\\Entity"} []
[2025-08-28T16:43:23.781929+00:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-08-28T16:43:23.786480+00:00] doctrine.INFO: Disconnecting [] []
[2025-08-28T16:44:46.802539+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-28T16:44:46.815533+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.817456+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-28T16:44:46.822368+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-08-28T16:44:46.824159+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-28T16:44:46.825186+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.826015+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-28T16:44:46.829350+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.829786+00:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-08-28T16:44:46.831151+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.831844+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-08-28T16:44:46.833383+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-08-28T16:44:46.836811+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.837693+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-08-28T16:44:46.840287+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16389   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16389\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:44:46.841580+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-28T16:44:46.843894+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.844745+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-28T16:44:46.846151+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.846678+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-28T16:44:46.848210+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.848918+00:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-08-28T16:44:46.850111+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.850608+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-08-28T16:44:46.852047+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-08-28T16:44:46.855169+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.855842+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-08-28T16:44:46.858092+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16389   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16389\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:44:46.858844+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-28T16:44:46.860112+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-08-28T16:44:46.860858+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.861246+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'vehimant_db'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'vehimant_db'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-08-28T16:44:46.862644+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:44:46.862986+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-08-28T16:44:46.866568+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-08-28T16:44:46.867364+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-28T16:44:46.867801+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-08-28T16:44:46.869224+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-08-28T16:44:46.870900+00:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-08-28T16:44:46.872227+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-08-28T16:44:46.873132+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-08-28T16:44:46.873950+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-08-28T16:44:46.874393+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16402   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16402\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:44:46.874986+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16395   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16395\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-08-28T16:44:46.875422+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16395   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16395\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:44:46.875881+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16389   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16389\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:44:46.877006+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-28T16:44:46.882834+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-28T16:44:46.893534+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-08-28T16:44:46.894849+00:00] deprecation.INFO: User Deprecated: Passing $constraint as a Constraint object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropConstraintSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:1977 called by PostgreSQLPlatform.php:816, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $constraint as a Constraint object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropConstraintSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:1977 called by PostgreSQLPlatform.php:816, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-08-28T16:44:46.899000+00:00] doctrine.INFO: Disconnecting [] []
[2025-08-28T16:44:46.899133+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-28T16:44:46.899852+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-08-28T16:45:13.377265+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"vehimant_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"vehimant_db","serverVersion":"16","charset":"utf8"}} []
[2025-08-28T16:45:13.388110+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:45:13.390602+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:45:13.391774+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"vehimant_db"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"vehimant_db"},"types":{"1":2}} []
[2025-08-28T16:45:13.394232+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-08-28T16:45:13.394801+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-08-28T16:45:13.397766+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:45:13.398226+00:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-08-28T16:45:13.399321+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:45:13.399600+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-08-28T16:45:13.400791+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-08-28T16:45:13.403581+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-08-28T16:45:13.404121+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-08-28T16:45:13.405283+00:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16389   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16389\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-08-28T16:45:13.408435+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-28T16:45:13.409299+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-28T16:45:13.409697+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-08-28T16:45:13.422027+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-08-28T16:45:13.423611+00:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at /home/tonidebian/projects/VehiMant/projectVehiMant/vendor/symfony/error-handler/DebugClassLoader.php:347)"} []
[2025-08-28T16:45:13.424094+00:00] doctrine.DEBUG: Executing query: CREATE TABLE "user" (id UUID NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE \"user\" (id UUID NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-08-28T16:45:13.442051+00:00] doctrine.DEBUG: Executing query: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2025-08-28T16:45:13.446851+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN "user".id IS '(DC2Type:uuid)' {"sql":"COMMENT ON COLUMN \"user\".id IS '(DC2Type:uuid)'"} []
[2025-08-28T16:45:13.448145+00:00] doctrine.DEBUG: Executing query: ALTER TABLE vehicle ALTER owner_id TYPE UUID {"sql":"ALTER TABLE vehicle ALTER owner_id TYPE UUID"} []
[2025-08-28T16:45:13.449285+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN vehicle.owner_id IS '(DC2Type:uuid)' {"sql":"COMMENT ON COLUMN vehicle.owner_id IS '(DC2Type:uuid)'"} []
[2025-08-28T16:45:13.449642+00:00] doctrine.DEBUG: Executing query: ALTER TABLE vehicle ADD CONSTRAINT FK_1B80E4867E3C61F9 FOREIGN KEY (owner_id) REFERENCES "user" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE vehicle ADD CONSTRAINT FK_1B80E4867E3C61F9 FOREIGN KEY (owner_id) REFERENCES \"user\" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-08-28T16:45:13.455766+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_1B80E4867E3C61F9 ON vehicle (owner_id) {"sql":"CREATE INDEX IDX_1B80E4867E3C61F9 ON vehicle (owner_id)"} []
[2025-08-28T16:45:13.461127+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250828164446","2":"2025-08-28 16:45:13","3":37}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250828164446","2":"2025-08-28 16:45:13","3":37},"types":{"1":2,"2":2,"3":1}} []
[2025-08-28T16:45:13.462771+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-08-28T16:45:13.467311+00:00] doctrine.INFO: Disconnecting [] []
